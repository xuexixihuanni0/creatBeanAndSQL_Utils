<?xml version="1.0" encoding="UTF-8"?>
<!-- 
    Welcome to use the TableGo Tools.
    
    http://vipbooks.iteye.com
    http://blog.csdn.net/vipbooks
    http://www.cnblogs.com/vipbooks
    
    Author:bianj
    Email:edinsker@163.com
    Version:5.8.8
-->

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- USER -->
<mapper namespace="ABCDEFG.user">
    <!-- 结果映射 -->
    <resultMap id="userMap" type="UserEntity">
        <id column="ID" property="id" jdbcType="INTEGER" />
        <result column="OPEN_ID" property="openId" jdbcType="VARCHAR" />
        <result column="NAME" property="name" jdbcType="VARCHAR" />
        <result column="IPHONE" property="iphone" jdbcType="VARCHAR" />
        <result column="EMAIL" property="email" jdbcType="VARCHAR" />
        <result column="ROLE" property="role" jdbcType="VARCHAR" />
        <result column="REGISTER_TIME" property="registerTime" jdbcType="TIMESTAMP" />
        <result column="IMAGE" property="image" jdbcType="VARCHAR" />
        <result column="UPDATE_BY" property="updateBy" jdbcType="VARCHAR" />
        <result column="UPDATE_TIME" property="updateTime" jdbcType="VARCHAR" />
    </resultMap>
    
    <!-- 表所有字段 -->
    <sql id="allColumns">
        ID, OPEN_ID, NAME, IPHONE, EMAIL, ROLE, REGISTER_TIME, IMAGE, 
        UPDATE_BY, UPDATE_TIME
    </sql>
    
    <!-- 查询所有数据 -->
    <select id="findUserAll" resultMap="userMap">
        SELECT
        <include refid="allColumns" />
        FROM USER
    </select>
    
    <!-- 根据条件查询数据 -->
    <select id="findUserByCondition" resultMap="userMap" parameterType="map">
        SELECT
        <include refid="allColumns" />
        FROM USER WHERE 1 = 1
        <if test="openId != null and openId != ''">
            AND OPEN_ID LIKE CONCAT('%',#{openId},'%')
        </if>
        <if test="name != null and name != ''">
            AND NAME LIKE CONCAT('%',#{name},'%')
        </if>
        <if test="iphone != null and iphone != ''">
            AND IPHONE LIKE CONCAT('%',#{iphone},'%')
        </if>
        <if test="email != null and email != ''">
            AND EMAIL LIKE CONCAT('%',#{email},'%')
        </if>
        <if test="role != null and role != ''">
            AND ROLE LIKE CONCAT('%',#{role},'%')
        </if>
        <if test="registerTime != null">
            AND REGISTER_TIME = #{registerTime}
        </if>
        <if test="image != null">
            AND IMAGE = #{image}
        </if>
        <if test="updateBy != null and updateBy != ''">
            AND UPDATE_BY LIKE CONCAT('%',#{updateBy},'%')
        </if>
        <if test="updateTime != null">
            AND UPDATE_TIME = #{updateTime}
        </if>
    </select>
    
    <!-- 根据主键查询数据 -->
    <select id="findUserByIds" resultMap="userMap" parameterType="list">
        SELECT
        <include refid="allColumns" />
        FROM USER WHERE ID IN
        <foreach collection="list" index="index" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>
    
    <!-- 插入数据 -->
    <insert id="insertUser" parameterType="map">
        INSERT INTO USER (<include refid="allColumns" />)
        VALUES (
            #{id},
            #{openId},
            #{name},
            #{iphone},
            #{email},
            #{role},
            #{registerTime},
            #{image},
            #{updateBy},
            #{updateTime}
        )
    </insert>
    
    <!-- 批量插入数据 -->
    <insert id="insertUsers" parameterType="list">
        INSERT INTO USER (<include refid="allColumns" />)
        VALUES (
        <foreach collection="list" index="index" item="item" separator=",">
            (
                #{item.id},
                #{item.openId},
                #{item.name},
                #{item.iphone},
                #{item.email},
                #{item.role},
                #{item.registerTime},
                #{item.image},
                #{item.updateBy},
                #{item.updateTime}
            )
        </foreach>
    </insert>
    
    <!-- 修改数据 -->
    <update id="updateUser" parameterType="map">
        UPDATE USER SET
            OPEN_ID = #{openId},
            NAME = #{name},
            IPHONE = #{iphone},
            EMAIL = #{email},
            ROLE = #{role},
            REGISTER_TIME = #{registerTime},
            IMAGE = #{image},
            UPDATE_BY = #{updateBy},
            UPDATE_TIME = #{updateTime}
        WHERE ID = #{id}
    </update>
    
    <!-- 批量修改数据 -->
    <update id="updateUsers" parameterType="list">
        <foreach collection="list" index="index" item="item" separator=";">
            UPDATE USER SET
                OPEN_ID = #{item.openId},
                NAME = #{item.name},
                IPHONE = #{item.iphone},
                EMAIL = #{item.email},
                ROLE = #{item.role},
                REGISTER_TIME = #{item.registerTime},
                IMAGE = #{item.image},
                UPDATE_BY = #{item.updateBy},
                UPDATE_TIME = #{item.updateTime}
            WHERE ID = #{item.id}
        </foreach>
    </update>
    
    <!-- 根据主键删除数据 -->
    <delete id="deleteUserById" parameterType="string">
        DELETE FROM USER WHERE ID = #{id}
    </delete>
    
    <!-- 根据主键批量删除数据 -->
    <delete id="deleteUserByIds" parameterType="list">
        DELETE FROM USER WHERE ID IN
        <foreach collection="list" index="index" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>