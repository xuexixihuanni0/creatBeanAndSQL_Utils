<?xml version="1.0" encoding="UTF-8"?>
<!-- 
    Welcome to use the TableGo Tools.
    
    http://vipbooks.iteye.com
    http://blog.csdn.net/vipbooks
    http://www.cnblogs.com/vipbooks
    
    Author:bianj
    Email:edinsker@163.com
    Version:5.8.8
-->

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- PHOTO -->
<mapper namespace="ABCDEFG.photo">
    <!-- 结果映射 -->
    <resultMap id="photoMap" type="PhotoEntity">
        <id column="ID" property="id" jdbcType="INTEGER" />
        <result column="NAME" property="name" jdbcType="VARCHAR" />
        <result column="PHOTO" property="photo" jdbcType="VARCHAR" />
    </resultMap>
    
    <!-- 表所有字段 -->
    <sql id="allColumns">
        ID, NAME, PHOTO
    </sql>
    
    <!-- 查询所有数据 -->
    <select id="findPhotoAll" resultMap="photoMap">
        SELECT
        <include refid="allColumns" />
        FROM PHOTO
    </select>
    
    <!-- 根据条件查询数据 -->
    <select id="findPhotoByCondition" resultMap="photoMap" parameterType="map">
        SELECT
        <include refid="allColumns" />
        FROM PHOTO WHERE 1 = 1
        <if test="name != null and name != ''">
            AND NAME LIKE CONCAT('%',#{name},'%')
        </if>
        <if test="photo != null">
            AND PHOTO = #{photo}
        </if>
    </select>
    
    <!-- 根据主键查询数据 -->
    <select id="findPhotoByIds" resultMap="photoMap" parameterType="list">
        SELECT
        <include refid="allColumns" />
        FROM PHOTO WHERE ID IN
        <foreach collection="list" index="index" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>
    
    <!-- 插入数据 -->
    <insert id="insertPhoto" parameterType="map">
        INSERT INTO PHOTO (<include refid="allColumns" />)
        VALUES (
            #{id},
            #{name},
            #{photo}
        )
    </insert>
    
    <!-- 批量插入数据 -->
    <insert id="insertPhotos" parameterType="list">
        INSERT INTO PHOTO (<include refid="allColumns" />)
        VALUES (
        <foreach collection="list" index="index" item="item" separator=",">
            (
                #{item.id},
                #{item.name},
                #{item.photo}
            )
        </foreach>
    </insert>
    
    <!-- 修改数据 -->
    <update id="updatePhoto" parameterType="map">
        UPDATE PHOTO SET
            NAME = #{name},
            PHOTO = #{photo}
        WHERE ID = #{id}
    </update>
    
    <!-- 批量修改数据 -->
    <update id="updatePhotos" parameterType="list">
        <foreach collection="list" index="index" item="item" separator=";">
            UPDATE PHOTO SET
                NAME = #{item.name},
                PHOTO = #{item.photo}
            WHERE ID = #{item.id}
        </foreach>
    </update>
    
    <!-- 根据主键删除数据 -->
    <delete id="deletePhotoById" parameterType="string">
        DELETE FROM PHOTO WHERE ID = #{id}
    </delete>
    
    <!-- 根据主键批量删除数据 -->
    <delete id="deletePhotoByIds" parameterType="list">
        DELETE FROM PHOTO WHERE ID IN
        <foreach collection="list" index="index" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>