<?xml version="1.0" encoding="UTF-8"?>
<!-- 
    Welcome to use the TableGo Tools.
    
    http://vipbooks.iteye.com
    http://blog.csdn.net/vipbooks
    http://www.cnblogs.com/vipbooks
    
    Author:bianj
    Email:edinsker@163.com
    Version:5.8.8
-->

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- CONSUMER -->
<mapper namespace="ABCDEFG.consumer">
    <!-- 结果映射 -->
    <resultMap id="consumerMap" type="ConsumerEntity">
        <id column="ID" property="id" jdbcType="INTEGER" />
        <result column="NAME" property="name" jdbcType="VARCHAR" />
        <result column="IPHONE" property="iphone" jdbcType="VARCHAR" />
        <result column="NUM" property="num" jdbcType="INTEGER" />
        <result column="MONEY" property="money" jdbcType="VARCHAR" />
        <result column="SUPERIOR" property="superior" jdbcType="VARCHAR" />
        <result column="INCOME" property="income" jdbcType="VARCHAR" />
        <result column="TIME" property="time" jdbcType="VARCHAR" />
    </resultMap>
    
    <!-- 表所有字段 -->
    <sql id="allColumns">
        ID, NAME, IPHONE, NUM, MONEY, SUPERIOR, INCOME, TIME
    </sql>
    
    <!-- 查询所有数据 -->
    <select id="findConsumerAll" resultMap="consumerMap">
        SELECT
        <include refid="allColumns" />
        FROM CONSUMER
    </select>
    
    <!-- 根据条件查询数据 -->
    <select id="findConsumerByCondition" resultMap="consumerMap" parameterType="map">
        SELECT
        <include refid="allColumns" />
        FROM CONSUMER WHERE 1 = 1
        <if test="name != null and name != ''">
            AND NAME LIKE CONCAT('%',#{name},'%')
        </if>
        <if test="iphone != null and iphone != ''">
            AND IPHONE LIKE CONCAT('%',#{iphone},'%')
        </if>
        <if test="num != null">
            AND NUM = #{num}
        </if>
        <if test="money != null">
            AND MONEY = #{money}
        </if>
        <if test="superior != null and superior != ''">
            AND SUPERIOR LIKE CONCAT('%',#{superior},'%')
        </if>
        <if test="income != null">
            AND INCOME = #{income}
        </if>
        <if test="time != null">
            AND TIME = #{time}
        </if>
    </select>
    
    <!-- 根据主键查询数据 -->
    <select id="findConsumerByIds" resultMap="consumerMap" parameterType="list">
        SELECT
        <include refid="allColumns" />
        FROM CONSUMER WHERE ID IN
        <foreach collection="list" index="index" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>
    
    <!-- 插入数据 -->
    <insert id="insertConsumer" parameterType="map">
        INSERT INTO CONSUMER (<include refid="allColumns" />)
        VALUES (
            #{id},
            #{name},
            #{iphone},
            #{num},
            #{money},
            #{superior},
            #{income},
            #{time}
        )
    </insert>
    
    <!-- 批量插入数据 -->
    <insert id="insertConsumers" parameterType="list">
        INSERT INTO CONSUMER (<include refid="allColumns" />)
        VALUES (
        <foreach collection="list" index="index" item="item" separator=",">
            (
                #{item.id},
                #{item.name},
                #{item.iphone},
                #{item.num},
                #{item.money},
                #{item.superior},
                #{item.income},
                #{item.time}
            )
        </foreach>
    </insert>
    
    <!-- 修改数据 -->
    <update id="updateConsumer" parameterType="map">
        UPDATE CONSUMER SET
            NAME = #{name},
            IPHONE = #{iphone},
            NUM = #{num},
            MONEY = #{money},
            SUPERIOR = #{superior},
            INCOME = #{income},
            TIME = #{time}
        WHERE ID = #{id}
    </update>
    
    <!-- 批量修改数据 -->
    <update id="updateConsumers" parameterType="list">
        <foreach collection="list" index="index" item="item" separator=";">
            UPDATE CONSUMER SET
                NAME = #{item.name},
                IPHONE = #{item.iphone},
                NUM = #{item.num},
                MONEY = #{item.money},
                SUPERIOR = #{item.superior},
                INCOME = #{item.income},
                TIME = #{item.time}
            WHERE ID = #{item.id}
        </foreach>
    </update>
    
    <!-- 根据主键删除数据 -->
    <delete id="deleteConsumerById" parameterType="string">
        DELETE FROM CONSUMER WHERE ID = #{id}
    </delete>
    
    <!-- 根据主键批量删除数据 -->
    <delete id="deleteConsumerByIds" parameterType="list">
        DELETE FROM CONSUMER WHERE ID IN
        <foreach collection="list" index="index" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>